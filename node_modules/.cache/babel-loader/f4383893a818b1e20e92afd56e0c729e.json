{"ast":null,"code":"// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\"use strict\";\n\n(() => {\n  const enosys = () => {\n    const err = new Error(\"not implemented\");\n    err.code = \"ENOSYS\";\n    return err;\n  };\n\n  if (!globalThis.fs) {\n    let outputBuf = \"\";\n    globalThis.fs = {\n      constants: {\n        O_WRONLY: -1,\n        O_RDWR: -1,\n        O_CREAT: -1,\n        O_TRUNC: -1,\n        O_APPEND: -1,\n        O_EXCL: -1\n      },\n\n      // unused\n      writeSync(fd, buf) {\n        outputBuf += decoder.decode(buf);\n        const nl = outputBuf.lastIndexOf(\"\\n\");\n\n        if (nl != -1) {\n          console.log(outputBuf.substr(0, nl));\n          outputBuf = outputBuf.substr(nl + 1);\n        }\n\n        return buf.length;\n      },\n\n      write(fd, buf, offset, length, position, callback) {\n        if (offset !== 0 || length !== buf.length || position !== null) {\n          callback(enosys());\n          return;\n        }\n\n        const n = this.writeSync(fd, buf);\n        callback(null, n);\n      },\n\n      chmod(path, mode, callback) {\n        callback(enosys());\n      },\n\n      chown(path, uid, gid, callback) {\n        callback(enosys());\n      },\n\n      close(fd, callback) {\n        callback(enosys());\n      },\n\n      fchmod(fd, mode, callback) {\n        callback(enosys());\n      },\n\n      fchown(fd, uid, gid, callback) {\n        callback(enosys());\n      },\n\n      fstat(fd, callback) {\n        callback(enosys());\n      },\n\n      fsync(fd, callback) {\n        callback(null);\n      },\n\n      ftruncate(fd, length, callback) {\n        callback(enosys());\n      },\n\n      lchown(path, uid, gid, callback) {\n        callback(enosys());\n      },\n\n      link(path, link, callback) {\n        callback(enosys());\n      },\n\n      lstat(path, callback) {\n        callback(enosys());\n      },\n\n      mkdir(path, perm, callback) {\n        callback(enosys());\n      },\n\n      open(path, flags, mode, callback) {\n        callback(enosys());\n      },\n\n      read(fd, buffer, offset, length, position, callback) {\n        callback(enosys());\n      },\n\n      readdir(path, callback) {\n        callback(enosys());\n      },\n\n      readlink(path, callback) {\n        callback(enosys());\n      },\n\n      rename(from, to, callback) {\n        callback(enosys());\n      },\n\n      rmdir(path, callback) {\n        callback(enosys());\n      },\n\n      stat(path, callback) {\n        callback(enosys());\n      },\n\n      symlink(path, link, callback) {\n        callback(enosys());\n      },\n\n      truncate(path, length, callback) {\n        callback(enosys());\n      },\n\n      unlink(path, callback) {\n        callback(enosys());\n      },\n\n      utimes(path, atime, mtime, callback) {\n        callback(enosys());\n      }\n\n    };\n  }\n\n  if (!globalThis.process) {\n    globalThis.process = {\n      getuid() {\n        return -1;\n      },\n\n      getgid() {\n        return -1;\n      },\n\n      geteuid() {\n        return -1;\n      },\n\n      getegid() {\n        return -1;\n      },\n\n      getgroups() {\n        throw enosys();\n      },\n\n      pid: -1,\n      ppid: -1,\n\n      umask() {\n        throw enosys();\n      },\n\n      cwd() {\n        throw enosys();\n      },\n\n      chdir() {\n        throw enosys();\n      }\n\n    };\n  }\n\n  if (!globalThis.crypto) {\n    throw new Error(\"globalThis.crypto is not available, polyfill required (crypto.getRandomValues only)\");\n  }\n\n  if (!globalThis.performance) {\n    throw new Error(\"globalThis.performance is not available, polyfill required (performance.now only)\");\n  }\n\n  if (!globalThis.TextEncoder) {\n    throw new Error(\"globalThis.TextEncoder is not available, polyfill required\");\n  }\n\n  if (!globalThis.TextDecoder) {\n    throw new Error(\"globalThis.TextDecoder is not available, polyfill required\");\n  }\n\n  const encoder = new TextEncoder(\"utf-8\");\n  const decoder = new TextDecoder(\"utf-8\");\n  globalThis.Go = class {\n    constructor() {\n      this.argv = [\"js\"];\n      this.env = {};\n\n      this.exit = code => {\n        if (code !== 0) {\n          console.warn(\"exit code:\", code);\n        }\n      };\n\n      this._exitPromise = new Promise(resolve => {\n        this._resolveExitPromise = resolve;\n      });\n      this._pendingEvent = null;\n      this._scheduledTimeouts = new Map();\n      this._nextCallbackTimeoutID = 1;\n\n      const setInt64 = (addr, v) => {\n        this.mem.setUint32(addr + 0, v, true);\n        this.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n      };\n\n      const getInt64 = addr => {\n        const low = this.mem.getUint32(addr + 0, true);\n        const high = this.mem.getInt32(addr + 4, true);\n        return low + high * 4294967296;\n      };\n\n      const loadValue = addr => {\n        const f = this.mem.getFloat64(addr, true);\n\n        if (f === 0) {\n          return undefined;\n        }\n\n        if (!isNaN(f)) {\n          return f;\n        }\n\n        const id = this.mem.getUint32(addr, true);\n        return this._values[id];\n      };\n\n      const storeValue = (addr, v) => {\n        const nanHead = 0x7FF80000;\n\n        if (typeof v === \"number\" && v !== 0) {\n          if (isNaN(v)) {\n            this.mem.setUint32(addr + 4, nanHead, true);\n            this.mem.setUint32(addr, 0, true);\n            return;\n          }\n\n          this.mem.setFloat64(addr, v, true);\n          return;\n        }\n\n        if (v === undefined) {\n          this.mem.setFloat64(addr, 0, true);\n          return;\n        }\n\n        let id = this._ids.get(v);\n\n        if (id === undefined) {\n          id = this._idPool.pop();\n\n          if (id === undefined) {\n            id = this._values.length;\n          }\n\n          this._values[id] = v;\n          this._goRefCounts[id] = 0;\n\n          this._ids.set(v, id);\n        }\n\n        this._goRefCounts[id]++;\n        let typeFlag = 0;\n\n        switch (typeof v) {\n          case \"object\":\n            if (v !== null) {\n              typeFlag = 1;\n            }\n\n            break;\n\n          case \"string\":\n            typeFlag = 2;\n            break;\n\n          case \"symbol\":\n            typeFlag = 3;\n            break;\n\n          case \"function\":\n            typeFlag = 4;\n            break;\n        }\n\n        this.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n        this.mem.setUint32(addr, id, true);\n      };\n\n      const loadSlice = addr => {\n        const array = getInt64(addr + 0);\n        const len = getInt64(addr + 8);\n        return new Uint8Array(this._inst.exports.mem.buffer, array, len);\n      };\n\n      const loadSliceOfValues = addr => {\n        const array = getInt64(addr + 0);\n        const len = getInt64(addr + 8);\n        const a = new Array(len);\n\n        for (let i = 0; i < len; i++) {\n          a[i] = loadValue(array + i * 8);\n        }\n\n        return a;\n      };\n\n      const loadString = addr => {\n        const saddr = getInt64(addr + 0);\n        const len = getInt64(addr + 8);\n        return decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n      };\n\n      const timeOrigin = Date.now() - performance.now();\n      this.importObject = {\n        go: {\n          // Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n          // may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n          // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n          // This changes the SP, thus we have to update the SP used by the imported function.\n          // func wasmExit(code int32)\n          \"runtime.wasmExit\": sp => {\n            sp >>>= 0;\n            const code = this.mem.getInt32(sp + 8, true);\n            this.exited = true;\n            delete this._inst;\n            delete this._values;\n            delete this._goRefCounts;\n            delete this._ids;\n            delete this._idPool;\n            this.exit(code);\n          },\n          // func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n          \"runtime.wasmWrite\": sp => {\n            sp >>>= 0;\n            const fd = getInt64(sp + 8);\n            const p = getInt64(sp + 16);\n            const n = this.mem.getInt32(sp + 24, true);\n            fs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n          },\n          // func resetMemoryDataView()\n          \"runtime.resetMemoryDataView\": sp => {\n            sp >>>= 0;\n            this.mem = new DataView(this._inst.exports.mem.buffer);\n          },\n          // func nanotime1() int64\n          \"runtime.nanotime1\": sp => {\n            sp >>>= 0;\n            setInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n          },\n          // func walltime() (sec int64, nsec int32)\n          \"runtime.walltime\": sp => {\n            sp >>>= 0;\n            const msec = new Date().getTime();\n            setInt64(sp + 8, msec / 1000);\n            this.mem.setInt32(sp + 16, msec % 1000 * 1000000, true);\n          },\n          // func scheduleTimeoutEvent(delay int64) int32\n          \"runtime.scheduleTimeoutEvent\": sp => {\n            sp >>>= 0;\n            const id = this._nextCallbackTimeoutID;\n            this._nextCallbackTimeoutID++;\n\n            this._scheduledTimeouts.set(id, setTimeout(() => {\n              this._resume();\n\n              while (this._scheduledTimeouts.has(id)) {\n                // for some reason Go failed to register the timeout event, log and try again\n                // (temporary workaround for https://github.com/golang/go/issues/28975)\n                console.warn(\"scheduleTimeoutEvent: missed timeout event\");\n\n                this._resume();\n              }\n            }, getInt64(sp + 8) + 1 // setTimeout has been seen to fire up to 1 millisecond early\n            ));\n\n            this.mem.setInt32(sp + 16, id, true);\n          },\n          // func clearTimeoutEvent(id int32)\n          \"runtime.clearTimeoutEvent\": sp => {\n            sp >>>= 0;\n            const id = this.mem.getInt32(sp + 8, true);\n            clearTimeout(this._scheduledTimeouts.get(id));\n\n            this._scheduledTimeouts.delete(id);\n          },\n          // func getRandomData(r []byte)\n          \"runtime.getRandomData\": sp => {\n            sp >>>= 0;\n            crypto.getRandomValues(loadSlice(sp + 8));\n          },\n          // func finalizeRef(v ref)\n          \"syscall/js.finalizeRef\": sp => {\n            sp >>>= 0;\n            const id = this.mem.getUint32(sp + 8, true);\n            this._goRefCounts[id]--;\n\n            if (this._goRefCounts[id] === 0) {\n              const v = this._values[id];\n              this._values[id] = null;\n\n              this._ids.delete(v);\n\n              this._idPool.push(id);\n            }\n          },\n          // func stringVal(value string) ref\n          \"syscall/js.stringVal\": sp => {\n            sp >>>= 0;\n            storeValue(sp + 24, loadString(sp + 8));\n          },\n          // func valueGet(v ref, p string) ref\n          \"syscall/js.valueGet\": sp => {\n            sp >>>= 0;\n            const result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n            sp = this._inst.exports.getsp() >>> 0; // see comment above\n\n            storeValue(sp + 32, result);\n          },\n          // func valueSet(v ref, p string, x ref)\n          \"syscall/js.valueSet\": sp => {\n            sp >>>= 0;\n            Reflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n          },\n          // func valueDelete(v ref, p string)\n          \"syscall/js.valueDelete\": sp => {\n            sp >>>= 0;\n            Reflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n          },\n          // func valueIndex(v ref, i int) ref\n          \"syscall/js.valueIndex\": sp => {\n            sp >>>= 0;\n            storeValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n          },\n          // valueSetIndex(v ref, i int, x ref)\n          \"syscall/js.valueSetIndex\": sp => {\n            sp >>>= 0;\n            Reflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n          },\n          // func valueCall(v ref, m string, args []ref) (ref, bool)\n          \"syscall/js.valueCall\": sp => {\n            sp >>>= 0;\n\n            try {\n              const v = loadValue(sp + 8);\n              const m = Reflect.get(v, loadString(sp + 16));\n              const args = loadSliceOfValues(sp + 32);\n              const result = Reflect.apply(m, v, args);\n              sp = this._inst.exports.getsp() >>> 0; // see comment above\n\n              storeValue(sp + 56, result);\n              this.mem.setUint8(sp + 64, 1);\n            } catch (err) {\n              sp = this._inst.exports.getsp() >>> 0; // see comment above\n\n              storeValue(sp + 56, err);\n              this.mem.setUint8(sp + 64, 0);\n            }\n          },\n          // func valueInvoke(v ref, args []ref) (ref, bool)\n          \"syscall/js.valueInvoke\": sp => {\n            sp >>>= 0;\n\n            try {\n              const v = loadValue(sp + 8);\n              const args = loadSliceOfValues(sp + 16);\n              const result = Reflect.apply(v, undefined, args);\n              sp = this._inst.exports.getsp() >>> 0; // see comment above\n\n              storeValue(sp + 40, result);\n              this.mem.setUint8(sp + 48, 1);\n            } catch (err) {\n              sp = this._inst.exports.getsp() >>> 0; // see comment above\n\n              storeValue(sp + 40, err);\n              this.mem.setUint8(sp + 48, 0);\n            }\n          },\n          // func valueNew(v ref, args []ref) (ref, bool)\n          \"syscall/js.valueNew\": sp => {\n            sp >>>= 0;\n\n            try {\n              const v = loadValue(sp + 8);\n              const args = loadSliceOfValues(sp + 16);\n              const result = Reflect.construct(v, args);\n              sp = this._inst.exports.getsp() >>> 0; // see comment above\n\n              storeValue(sp + 40, result);\n              this.mem.setUint8(sp + 48, 1);\n            } catch (err) {\n              sp = this._inst.exports.getsp() >>> 0; // see comment above\n\n              storeValue(sp + 40, err);\n              this.mem.setUint8(sp + 48, 0);\n            }\n          },\n          // func valueLength(v ref) int\n          \"syscall/js.valueLength\": sp => {\n            sp >>>= 0;\n            setInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n          },\n          // valuePrepareString(v ref) (ref, int)\n          \"syscall/js.valuePrepareString\": sp => {\n            sp >>>= 0;\n            const str = encoder.encode(String(loadValue(sp + 8)));\n            storeValue(sp + 16, str);\n            setInt64(sp + 24, str.length);\n          },\n          // valueLoadString(v ref, b []byte)\n          \"syscall/js.valueLoadString\": sp => {\n            sp >>>= 0;\n            const str = loadValue(sp + 8);\n            loadSlice(sp + 16).set(str);\n          },\n          // func valueInstanceOf(v ref, t ref) bool\n          \"syscall/js.valueInstanceOf\": sp => {\n            sp >>>= 0;\n            this.mem.setUint8(sp + 24, loadValue(sp + 8) instanceof loadValue(sp + 16) ? 1 : 0);\n          },\n          // func copyBytesToGo(dst []byte, src ref) (int, bool)\n          \"syscall/js.copyBytesToGo\": sp => {\n            sp >>>= 0;\n            const dst = loadSlice(sp + 8);\n            const src = loadValue(sp + 32);\n\n            if (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n              this.mem.setUint8(sp + 48, 0);\n              return;\n            }\n\n            const toCopy = src.subarray(0, dst.length);\n            dst.set(toCopy);\n            setInt64(sp + 40, toCopy.length);\n            this.mem.setUint8(sp + 48, 1);\n          },\n          // func copyBytesToJS(dst ref, src []byte) (int, bool)\n          \"syscall/js.copyBytesToJS\": sp => {\n            sp >>>= 0;\n            const dst = loadValue(sp + 8);\n            const src = loadSlice(sp + 16);\n\n            if (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n              this.mem.setUint8(sp + 48, 0);\n              return;\n            }\n\n            const toCopy = src.subarray(0, dst.length);\n            dst.set(toCopy);\n            setInt64(sp + 40, toCopy.length);\n            this.mem.setUint8(sp + 48, 1);\n          },\n          \"debug\": value => {\n            console.log(value);\n          }\n        }\n      };\n    }\n\n    async run(instance) {\n      if (!(instance instanceof WebAssembly.Instance)) {\n        throw new Error(\"Go.run: WebAssembly.Instance expected\");\n      }\n\n      this._inst = instance;\n      this.mem = new DataView(this._inst.exports.mem.buffer);\n      this._values = [// JS values that Go currently has references to, indexed by reference id\n      NaN, 0, null, true, false, globalThis, this];\n      this._goRefCounts = new Array(this._values.length).fill(Infinity); // number of references that Go has to a JS value, indexed by reference id\n\n      this._ids = new Map([// mapping from JS values to reference ids\n      [0, 1], [null, 2], [true, 3], [false, 4], [globalThis, 5], [this, 6]]);\n      this._idPool = []; // unused ids that have been garbage collected\n\n      this.exited = false; // whether the Go program has exited\n      // Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\n      let offset = 4096;\n\n      const strPtr = str => {\n        const ptr = offset;\n        const bytes = encoder.encode(str + \"\\0\");\n        new Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n        offset += bytes.length;\n\n        if (offset % 8 !== 0) {\n          offset += 8 - offset % 8;\n        }\n\n        return ptr;\n      };\n\n      const argc = this.argv.length;\n      const argvPtrs = [];\n      this.argv.forEach(arg => {\n        argvPtrs.push(strPtr(arg));\n      });\n      argvPtrs.push(0);\n      const keys = Object.keys(this.env).sort();\n      keys.forEach(key => {\n        argvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n      });\n      argvPtrs.push(0);\n      const argv = offset;\n      argvPtrs.forEach(ptr => {\n        this.mem.setUint32(offset, ptr, true);\n        this.mem.setUint32(offset + 4, 0, true);\n        offset += 8;\n      }); // The linker guarantees global data starts from at least wasmMinDataAddr.\n      // Keep in sync with cmd/link/internal/ld/data.go:wasmMinDataAddr.\n\n      const wasmMinDataAddr = 4096 + 8192;\n\n      if (offset >= wasmMinDataAddr) {\n        throw new Error(\"total length of command line and environment variables exceeds limit\");\n      }\n\n      this._inst.exports.run(argc, argv);\n\n      if (this.exited) {\n        this._resolveExitPromise();\n      }\n\n      await this._exitPromise;\n    }\n\n    _resume() {\n      if (this.exited) {\n        throw new Error(\"Go program has already exited\");\n      }\n\n      this._inst.exports.resume();\n\n      if (this.exited) {\n        this._resolveExitPromise();\n      }\n    }\n\n    _makeFuncWrapper(id) {\n      const go = this;\n      return function () {\n        const event = {\n          id: id,\n          this: this,\n          args: arguments\n        };\n        go._pendingEvent = event;\n\n        go._resume();\n\n        return event.result;\n      };\n    }\n\n  };\n})();","map":{"version":3,"names":["enosys","err","Error","code","globalThis","fs","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","buf","decoder","decode","nl","lastIndexOf","console","log","substr","length","write","offset","position","callback","n","chmod","path","mode","chown","uid","gid","close","fchmod","fchown","fstat","fsync","ftruncate","lchown","link","lstat","mkdir","perm","open","flags","read","buffer","readdir","readlink","rename","from","to","rmdir","stat","symlink","truncate","unlink","utimes","atime","mtime","process","getuid","getgid","geteuid","getegid","getgroups","pid","ppid","umask","cwd","chdir","crypto","performance","TextEncoder","TextDecoder","encoder","Go","constructor","argv","env","exit","warn","_exitPromise","Promise","resolve","_resolveExitPromise","_pendingEvent","_scheduledTimeouts","Map","_nextCallbackTimeoutID","setInt64","addr","v","mem","setUint32","Math","floor","getInt64","low","getUint32","high","getInt32","loadValue","f","getFloat64","undefined","isNaN","id","_values","storeValue","nanHead","setFloat64","_ids","get","_idPool","pop","_goRefCounts","set","typeFlag","loadSlice","array","len","Uint8Array","_inst","exports","loadSliceOfValues","a","Array","i","loadString","saddr","DataView","timeOrigin","Date","now","importObject","go","sp","exited","p","msec","getTime","setInt32","setTimeout","_resume","has","clearTimeout","delete","getRandomValues","push","result","Reflect","getsp","deleteProperty","m","args","apply","setUint8","construct","parseInt","str","encode","String","dst","src","Uint8ClampedArray","toCopy","subarray","value","run","instance","WebAssembly","Instance","NaN","fill","Infinity","strPtr","ptr","bytes","argc","argvPtrs","forEach","arg","keys","Object","sort","key","wasmMinDataAddr","resume","_makeFuncWrapper","event","this","arguments"],"sources":["/home/johan/dev/github/colonyos/dashboard/dashboard/src/colonies/crypto/wasm_exec.js"],"sourcesContent":["// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n\"use strict\";\n\n(() => {\n\tconst enosys = () => {\n\t\tconst err = new Error(\"not implemented\");\n\t\terr.code = \"ENOSYS\";\n\t\treturn err;\n\t};\n\n\tif (!globalThis.fs) {\n\t\tlet outputBuf = \"\";\n\t\tglobalThis.fs = {\n\t\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 }, // unused\n\t\t\twriteSync(fd, buf) {\n\t\t\t\toutputBuf += decoder.decode(buf);\n\t\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\t\tif (nl != -1) {\n\t\t\t\t\tconsole.log(outputBuf.substr(0, nl));\n\t\t\t\t\toutputBuf = outputBuf.substr(nl + 1);\n\t\t\t\t}\n\t\t\t\treturn buf.length;\n\t\t\t},\n\t\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\t\tcallback(enosys());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\t\tcallback(null, n);\n\t\t\t},\n\t\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tclose(fd, callback) { callback(enosys()); },\n\t\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\t\tfstat(fd, callback) { callback(enosys()); },\n\t\t\tfsync(fd, callback) { callback(null); },\n\t\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tlink(path, link, callback) { callback(enosys()); },\n\t\t\tlstat(path, callback) { callback(enosys()); },\n\t\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\t\treaddir(path, callback) { callback(enosys()); },\n\t\t\treadlink(path, callback) { callback(enosys()); },\n\t\t\trename(from, to, callback) { callback(enosys()); },\n\t\t\trmdir(path, callback) { callback(enosys()); },\n\t\t\tstat(path, callback) { callback(enosys()); },\n\t\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\t\tunlink(path, callback) { callback(enosys()); },\n\t\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t\t};\n\t}\n\n\tif (!globalThis.process) {\n\t\tglobalThis.process = {\n\t\t\tgetuid() { return -1; },\n\t\t\tgetgid() { return -1; },\n\t\t\tgeteuid() { return -1; },\n\t\t\tgetegid() { return -1; },\n\t\t\tgetgroups() { throw enosys(); },\n\t\t\tpid: -1,\n\t\t\tppid: -1,\n\t\t\tumask() { throw enosys(); },\n\t\t\tcwd() { throw enosys(); },\n\t\t\tchdir() { throw enosys(); },\n\t\t}\n\t}\n\n\tif (!globalThis.crypto) {\n\t\tthrow new Error(\"globalThis.crypto is not available, polyfill required (crypto.getRandomValues only)\");\n\t}\n\n\tif (!globalThis.performance) {\n\t\tthrow new Error(\"globalThis.performance is not available, polyfill required (performance.now only)\");\n\t}\n\n\tif (!globalThis.TextEncoder) {\n\t\tthrow new Error(\"globalThis.TextEncoder is not available, polyfill required\");\n\t}\n\n\tif (!globalThis.TextDecoder) {\n\t\tthrow new Error(\"globalThis.TextDecoder is not available, polyfill required\");\n\t}\n\n\tconst encoder = new TextEncoder(\"utf-8\");\n\tconst decoder = new TextDecoder(\"utf-8\");\n\n\tglobalThis.Go = class {\n\t\tconstructor() {\n\t\t\tthis.argv = [\"js\"];\n\t\t\tthis.env = {};\n\t\t\tthis.exit = (code) => {\n\t\t\t\tif (code !== 0) {\n\t\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\t\tthis._resolveExitPromise = resolve;\n\t\t\t});\n\t\t\tthis._pendingEvent = null;\n\t\t\tthis._scheduledTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\tthis.mem.setUint32(addr + 0, v, true);\n\t\t\t\tthis.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t}\n\n\t\t\tconst getInt64 = (addr) => {\n\t\t\t\tconst low = this.mem.getUint32(addr + 0, true);\n\t\t\t\tconst high = this.mem.getInt32(addr + 4, true);\n\t\t\t\treturn low + high * 4294967296;\n\t\t\t}\n\n\t\t\tconst loadValue = (addr) => {\n\t\t\t\tconst f = this.mem.getFloat64(addr, true);\n\t\t\t\tif (f === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = this.mem.getUint32(addr, true);\n\t\t\t\treturn this._values[id];\n\t\t\t}\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tconst nanHead = 0x7FF80000;\n\n\t\t\t\tif (typeof v === \"number\" && v !== 0) {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.mem.setFloat64(addr, v, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (v === undefined) {\n\t\t\t\t\tthis.mem.setFloat64(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = this._values.length;\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t}\n\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\tlet typeFlag = 0;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase \"object\":\n\t\t\t\t\t\tif (v !== null) {\n\t\t\t\t\t\t\ttypeFlag = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\tthis.mem.setUint32(addr, id, true);\n\t\t\t}\n\n\t\t\tconst loadSlice = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t\t}\n\n\t\t\tconst loadSliceOfValues = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\tconst loadString = (addr) => {\n\t\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t\t}\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\tgo: {\n\t\t\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\n\t\t\t\t\t// func wasmExit(code int32)\n\t\t\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst code = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tthis.exited = true;\n\t\t\t\t\t\tdelete this._inst;\n\t\t\t\t\t\tdelete this._values;\n\t\t\t\t\t\tdelete this._goRefCounts;\n\t\t\t\t\t\tdelete this._ids;\n\t\t\t\t\t\tdelete this._idPool;\n\t\t\t\t\t\tthis.exit(code);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\t\t\tconst n = this.mem.getInt32(sp + 24, true);\n\t\t\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func resetMemoryDataView()\n\t\t\t\t\t\"runtime.resetMemoryDataView\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func nanotime1() int64\n\t\t\t\t\t\"runtime.nanotime1\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func walltime() (sec int64, nsec int32)\n\t\t\t\t\t\"runtime.walltime\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst msec = (new Date).getTime();\n\t\t\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\twhile (this._scheduledTimeouts.has(id)) {\n\t\t\t\t\t\t\t\t\t// for some reason Go failed to register the timeout event, log and try again\n\t\t\t\t\t\t\t\t\t// (temporary workaround for https://github.com/golang/go/issues/28975)\n\t\t\t\t\t\t\t\t\tconsole.warn(\"scheduleTimeoutEvent: missed timeout event\");\n\t\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetInt64(sp + 8) + 1, // setTimeout has been seen to fire up to 1 millisecond early\n\t\t\t\t\t\t));\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, id, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func getRandomData(r []byte)\n\t\t\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t\"syscall/js.finalizeRef\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this.mem.getUint32(sp + 8, true);\n\t\t\t\t\t\tthis._goRefCounts[id]--;\n\t\t\t\t\t\tif (this._goRefCounts[id] === 0) {\n\t\t\t\t\t\t\tconst v = this._values[id];\n\t\t\t\t\t\t\tthis._values[id] = null;\n\t\t\t\t\t\t\tthis._ids.delete(v);\n\t\t\t\t\t\t\tthis._idPool.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t\"syscall/js.valueDelete\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tthis.mem.setUint8(sp + 24, (loadValue(sp + 8) instanceof loadValue(sp + 16)) ? 1 : 0);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToGo\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst dst = loadSlice(sp + 8);\n\t\t\t\t\t\tconst src = loadValue(sp + 32);\n\t\t\t\t\t\tif (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToJS\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst dst = loadValue(sp + 8);\n\t\t\t\t\t\tconst src = loadSlice(sp + 16);\n\t\t\t\t\t\tif (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t\"debug\": (value) => {\n\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tif (!(instance instanceof WebAssembly.Instance)) {\n\t\t\t\tthrow new Error(\"Go.run: WebAssembly.Instance expected\");\n\t\t\t}\n\t\t\tthis._inst = instance;\n\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\tNaN,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tglobalThis,\n\t\t\t\tthis,\n\t\t\t];\n\t\t\tthis._goRefCounts = new Array(this._values.length).fill(Infinity); // number of references that Go has to a JS value, indexed by reference id\n\t\t\tthis._ids = new Map([ // mapping from JS values to reference ids\n\t\t\t\t[0, 1],\n\t\t\t\t[null, 2],\n\t\t\t\t[true, 3],\n\t\t\t\t[false, 4],\n\t\t\t\t[globalThis, 5],\n\t\t\t\t[this, 6],\n\t\t\t]);\n\t\t\tthis._idPool = [];   // unused ids that have been garbage collected\n\t\t\tthis.exited = false; // whether the Go program has exited\n\n\t\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\t\tlet offset = 4096;\n\n\t\t\tconst strPtr = (str) => {\n\t\t\t\tconst ptr = offset;\n\t\t\t\tconst bytes = encoder.encode(str + \"\\0\");\n\t\t\t\tnew Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n\t\t\t\toffset += bytes.length;\n\t\t\t\tif (offset % 8 !== 0) {\n\t\t\t\t\toffset += 8 - (offset % 8);\n\t\t\t\t}\n\t\t\t\treturn ptr;\n\t\t\t};\n\n\t\t\tconst argc = this.argv.length;\n\n\t\t\tconst argvPtrs = [];\n\t\t\tthis.argv.forEach((arg) => {\n\t\t\t\targvPtrs.push(strPtr(arg));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst keys = Object.keys(this.env).sort();\n\t\t\tkeys.forEach((key) => {\n\t\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst argv = offset;\n\t\t\targvPtrs.forEach((ptr) => {\n\t\t\t\tthis.mem.setUint32(offset, ptr, true);\n\t\t\t\tthis.mem.setUint32(offset + 4, 0, true);\n\t\t\t\toffset += 8;\n\t\t\t});\n\n\t\t\t// The linker guarantees global data starts from at least wasmMinDataAddr.\n\t\t\t// Keep in sync with cmd/link/internal/ld/data.go:wasmMinDataAddr.\n\t\t\tconst wasmMinDataAddr = 4096 + 8192;\n\t\t\tif (offset >= wasmMinDataAddr) {\n\t\t\t\tthrow new Error(\"total length of command line and environment variables exceeds limit\");\n\t\t\t}\n\n\t\t\tthis._inst.exports.run(argc, argv);\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t\tawait this._exitPromise;\n\t\t}\n\n\t\t_resume() {\n\t\t\tif (this.exited) {\n\t\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t\t}\n\t\t\tthis._inst.exports.resume();\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t}\n\n\t\t_makeFuncWrapper(id) {\n\t\t\tconst go = this;\n\t\t\treturn function () {\n\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n\t\t\t};\n\t\t}\n\t}\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}